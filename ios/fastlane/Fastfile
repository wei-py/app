# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# Specify the Xcode version to use for builds
# This helps prevent issues when multiple Xcode versions are installed
xcode_select("/Applications/Xcode.app")

# Load team ID from environment or use a default
# You can set this in your environment variables or uncomment and replace
TEAM_ID = ENV['FASTLANE_TEAM_ID'] || 'YOUR_TEAM_ID'

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  # Helper lane to configure code signing
  lane :configure_signing do |options|
    # This will enable automatic code signing with the specified team ID
    update_code_signing_settings(
      use_automatic_signing: true,
      team_id: TEAM_ID,
      targets: "app",
      profile_name: options[:profile_name] || "match Development org.reactjs.native.example.app",
      code_sign_identity: options[:code_sign_identity] || "iPhone Developer"
    )
  end

  desc "development build"
  lane :build_dev do |options|
    # Configure code signing
    configure_signing(
      profile_name: "match Development org.reactjs.native.example.app",
      code_sign_identity: "iPhone Developer"
    )
    
    # Update info plist and version
    update_info_plist(
      xcodeproj: "app.xcodeproj",
      target: "app"
    )
    
    increment_version_number
    
    # Build the app
    build_app(
      scheme: "app",
      workspace: "app.xcworkspace",
      export_method: "development",
      configuration: "Debug",
      clean: true,
      xcargs: "GCC_PREPROCESSOR_DEFINITIONS='$(inherited) DEBUG=1'",
      export_options: {
        method: "development",
        compileBitcode: false,
        teamID: TEAM_ID,
        signingStyle: "automatic",
        provisioningProfiles: {
          "org.reactjs.native.example.app" => "match Development org.reactjs.native.example.app"
        }
      }
    )
  end

  desc "release build"
  lane :build_release do |options|
    # Configure code signing
    configure_signing(
      profile_name: "match AppStore org.reactjs.native.example.app",
      code_sign_identity: "iPhone Distribution"
    )
    
    # Update info plist and version
    update_info_plist(
      xcodeproj: "app.xcodeproj",
      target: "app"
    )
    
    increment_version_number
    increment_build_number
    
    # Build the app
    build_app(
      scheme: "app",
      workspace: "app.xcworkspace",
      export_method: "app-store",
      configuration: "Release",
      clean: true,
      export_options: {
        method: "app-store",
        compileBitcode: true,
        teamID: TEAM_ID,
        signingStyle: "automatic",
        provisioningProfiles: {
          "org.reactjs.native.example.app" => "match AppStore org.reactjs.native.example.app"
        }
      }
    )
  end
  
  # Utility lane to fix common build issues
  lane :fix_build_issues do
    # Clean derived data
    sh "rm -rf ~/Library/Developer/Xcode/DerivedData/*"
    
    # Reinstall pods
    sh "cd ios && pod deintegrate && pod install && cd .."
    
    # Show instructions for manual setup
    puts "\n\nIMPORTANT NOTES:"
    puts "1. Make sure you have set up your Apple Developer account in Xcode"
    puts "2. Open Xcode and go to Signing & Capabilities for the app target"
    puts "3. Select your development team"
    puts "4. If using automatic signing, ensure Xcode can manage certificates"
    puts "5. For manual signing, ensure you have valid provisioning profiles"
  end
  
end
