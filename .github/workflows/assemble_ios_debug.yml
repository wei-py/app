name: üçè Build iOS Debug (Staging)

on:
  push:
    branches:
      - staging

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_NAME: BTOLIGHT
  VERSION_NAME: 2.9.0
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_TYPE: debug
  TEAM_ID: ${{ secrets.TEAM_ID }}
  PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.DEBUG_PROVISIONING_PROFILE_SPECIFIER }}
  CODE_SIGN_IDENTITY: "Apple Development"
  SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_P12_DATA }}
  SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_PASSWORD }}
  PROVISIONING_PROFILE_DATA: ${{ secrets.DEBUG_PROVISIONING_PROFILE_DATA }}

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js & pnpm
        uses: pnpm/action-setup@v4
        with:
          node-version: "22"
          version: "latest"

      - name: üì¶ Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm exec react-native config

      - name: üçé Setup CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: üöÄ Install Bundler & Fastlane
        run: |
          gem install bundler
          bundle install

      - name: üîê Import Certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          chmod +x scripts/import-certificate.sh
          ./scripts/import-certificate.sh

      - name: üîê Import Provisioning Profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.DEBUG_PROVISIONING_PROFILE_DATA }}
        run: |
          chmod +x scripts/import-profile.sh
          ./scripts/import-profile.sh

      - name: üèóÔ∏è Build IPA with Fastlane
        run: |
          cd ios
          bundle exec fastlane build_debug
        env:
          # ‰º†ÈÄíÁéØÂ¢ÉÂèòÈáè
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_PASSWORD }}
          PROVISIONING_PROFILE_DATA: ${{ secrets.DEBUG_PROVISIONING_PROFILE_DATA }}
          TEAM_ID: ${{ secrets.TEAM_ID }}

      - name: ‚úÖ Check IPA exists
        run: |
          if [ ! -f "ios/build/export/app2.ipa" ]; then
            echo "‚ùå IPA not found!"
            exit 1
          fi

      - name: üíæ Upload Debug IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-ios-debug-ipa
          path: ios/build/export/app2.ipa
