name: üçè Build iOS Debug (Staging)

on:
  push:
    branches:
      - staging

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_NAME: BTOLIGHT
  VERSION_NAME: 2.9.0
  VERSION_NUMBER: 1.0.0
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_TYPE: debug
  TEAM_ID: ${{ secrets.TEAM_ID }}
  PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.DEBUG_PROVISIONING_PROFILE_SPECIFIER }}
  CODE_SIGN_IDENTITY: "Apple Development"
  SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_P12_DATA }}
  SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEBUG_SIGNING_CERTIFICATE_PASSWORD }}
  PROVISIONING_PROFILE_DATA: ${{ secrets.DEBUG_PROVISIONING_PROFILE_DATA }}

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js & pnpm
        uses: pnpm/action-setup@v4
        with:
          node-version: "22"
          pnpm-version: "latest"

      - name: üì¶ Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm exec react-native config

      - name: üçé Setup CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: üöÄ Install Fastlane
        run: |
          gem sources --add https://gems.ruby-china.com/ --update
          gem install fastlane -N

      - name: üîê Setup Certificates and Profiles
        run: |
          mkdir -p ~/Certificates
          # Ëß£Á†ÅËØÅ‰π¶
          echo "$SIGNING_CERTIFICATE_P12_DATA" | base64 --decode > ~/Certificates/cert.p12
          # Ëß£Á†ÅÈÖçÁΩÆÊñá‰ª∂
          echo "$PROVISIONING_PROFILE_DATA" | base64 --decode > ~/Certificates/profile.mobileprovision
          # ÂØºÂÖ•ËØÅ‰π¶
          security import ~/Certificates/cert.p12 -k ~/Library/Keychains/login.keychain-db -P "$SIGNING_CERTIFICATE_PASSWORD" -T /usr/bin/security
          # ËÆæÁΩÆÈÖçÁΩÆÊñá‰ª∂
          cp ~/Certificates/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: üèóÔ∏è Build IPA
        run: |
          cd ios
          xcodebuild archive \
            -project app2.xcodeproj \
            -scheme app2 \
            -configuration Debug \
            -archivePath build/app2.xcarchive \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            SKIP_INSTALL=NO \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          # ÂØºÂá∫ IPA
          xcodebuild -exportArchive \
            -archivePath build/app2.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist ios/exportOptions.plist \
            -exportFormat ipa

      - name: ‚úÖ Check IPA exists
        run: |
          if [ ! -f "ios/build/export/app2.ipa" ]; then
            echo "‚ùå IPA not found!"
            exit 1
          fi

      - name: üíæ Upload Debug IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-ios-debug-ipa
          path: ios/build/export/app2.ipa
